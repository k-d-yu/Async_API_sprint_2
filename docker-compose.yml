services:

  redis_controller:
    image: redis:7-alpine
    container_name: db_redis_controller
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - ./.env
    volumes:
      - redis_data:/data

  elasticsearch_db:
    image: elasticsearch:8.5.0
    container_name: movies_elasticsearch
    healthcheck:
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200/
      interval: 30s
      timeout: 10s
      retries: 50
    env_file:
      - ./.env
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elasticsearch_data:/elasticsearch/data
    ports:
      - 9200:9200
    
  elastic_data:
    build: ./previous_sprints/elasticsearch
    container_name: elastic_data
    image: elastic_data
    volumes:
      - ./previous_sprints/elasticsearch:/elasticsearch
    depends_on:
      elasticsearch_db:
        condition: service_healthy
      redis_controller:
        condition: service_healthy
    command: ["./wait-for-it.sh", "elasticsearch_db:9200", "--", "./elastic-init.sh"]

  fastapi_service:
    image: fastapi_service
    container_name: fastapi_service
    restart: always
    build: ./src
    volumes:
      - ./src:/async_api_1
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://fastapi_service:8000/api/openapi"]
      interval: 1m
      timeout: 10s
      retries: 3
    depends_on:
      elasticsearch_db:
        condition: service_healthy
      redis_controller:
        condition: service_healthy
      elastic_data:
        condition: service_completed_successfully
    ports:
      - 8000:8000
  
  nginx:
    image: nginx:1.23.2
    container_name: nginx
    volumes:
      - ./previous_sprints/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./previous_sprints/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - fastapi_service
    ports:
      - "80:80"

  tests:
    build: ./tests/functional
    image: fastapi_tests
    container_name: fastapi_tests
    volumes:
      - ./tests/functional:/async_tests
    env_file:
      - ./.env
    depends_on:
      fastapi_service:
        condition: service_healthy

volumes:
  elasticsearch_data:
  redis_data: